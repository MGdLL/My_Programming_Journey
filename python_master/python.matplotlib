## MATPLOTLIB

#for graphics import subpackage

import matplotlib.pyplot as plt

## GRAPHICS

#LINE PLOT
plt.plot(x,y) #for dertermine exes from the plot
plt.show() #for showing the plot. You do not need to enter anything inside these parentheses 


#SCATTER PLOT
import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.show()

#for transforming one of the exes into a logarithmic scale use:
plt.xscale('log')

#Example (LINE GRAPHIC)
import matplotlib.pyplot as plt
year = [1950,1970,1990,2010]
pop = [21519,3692,5263,6972]
plt.plot(year,pop)
plt.show

#Example (DOTS GRAPHIC)
import matplotlib.pyplot as plt
year = [1950,1970,1990,2010]
pop = [21519,3692,5263,6972]
plt.scatter(year,pop)
plt.show

#in this case for adding the size of the bubbles:
  # Import numpy as np
  import numpy as np
  # Store pop as a numpy array: np_pop
  np_pop = np.array(pop)
  # Double np_pop
  np_pop = np_pop*2
  # Update: set s argument to np_pop
  plt.scatter(gdp_cap, life_exp, s = pop)



#TITLE & LABELS
#Add axis labels
plt.xlabel(xlab)
plt.ylabel(ylab)


# Add title
plt.title('hi')

#CUSTOMIZING VALUES AT EXE X ( This function customizes the x-axis ticks by setting them at the positions specified in tick_val 
and labeling them with tick_lab. This makes the plot more readable by providing clear, concise labels for the tick marks.
tick_val = [1000, 10000, 100000]
tick_lab = ['1k', '10k', '100k']
plt.xticks(tick_val,tick_lab)


#HISTOGRAMS
